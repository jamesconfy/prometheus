version: '2.1'

orbs:
  aws-cli: circleci/aws-cli@3.1

commands:
  create_environment:
    steps:
      - run:
          name: Create Environment
          command: aws cloudformation deploy --stack-name prod-${CIRCLE_WORKFLOW_ID:0:5} --template-file server.yml --region us-east-1
               
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command: aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1

jobs:
  aws-cli-example:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run: echo "Run your code here"

  create_infrastructure:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - create_environment

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout 
      - run: apk add --update openssh-client git
      - add_ssh_keys:
          fingerprints: ["e4:31:75:0e:cf:31:37:bc:25:8a:74:c8:14:d0:91:7b"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook main-remote.yml -i inventory.txt

  passed_smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl
      - run:
          name: Smoke Test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

  failed_smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl
      - run:
          name: Smoke Test
          command: return 1
      - destroy_environment
    
workflows:
  aws-cli:
    jobs:
      - aws-cli-example:
          context: aws
      - create_infrastructure
    #  - configure_infrastructure
      - passed_smoke_test:
          requires:
            - create_infrastructure
      - failed_smoke_test:
          requires: 
            - create_infrastructure
            - passed_smoke_test

        
